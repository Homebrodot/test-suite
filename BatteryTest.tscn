[gd_scene load_steps=5 format=2]

[ext_resource path="res://QuitButton.gd" type="Script" id=1]
[ext_resource path="res://MainMenuButton.gd" type="Script" id=2]
[ext_resource path="res://Background.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]
resource_name = "BatteryTest"
script/source = "extends VBoxContainer

export(int, 1, 60) var _timer_const = 5
var _battery_percent = 0
var _power_state = OS.POWERSTATE_UNKNOWN
var _battery_seconds = 0
var _time_elapsed = 0

onready var battery_percent_label = $VBox/BatPerHBox/Amount
onready var power_state_label = $VBox/PowStateHBox/Amount
onready var battery_seconds_label = $VBox/BatSecHBox/Amount
onready var timer = $Timer

func _ready():	
	# in addition to showing in the GUI, also log to stdout every 5s
	timer.set_wait_time(_timer_const)
	timer.start()

func _parse_state(ps: int) -> String:
	match ps:
		OS.POWERSTATE_ON_BATTERY: return \"Discharging\"
		OS.POWERSTATE_NO_BATTERY: return \"No Battery\"
		OS.POWERSTATE_CHARGING: return \"Charging\"
		OS.POWERSTATE_CHARGED: return \"Fully Charged\"
		_: return \"Unknown\"

func _update_values() -> void:
	_battery_percent = OS.get_power_percent_left()
	_power_state = _parse_state(OS.get_power_state())
	_battery_seconds = OS.get_power_seconds_left()

func _update_labels() -> void:
	if (_battery_percent == -1): battery_percent_label.text = \"NOT AVAILABLE\"
	else: battery_percent_label.text = str(_battery_percent)

	power_state_label.text = _power_state

	if (_battery_seconds == -1): battery_seconds_label.text = \"NOT AVAILABLE\"
	else: battery_seconds_label.text = str(_battery_seconds)

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta) -> void:
	_update_values()
	_update_labels()

# log to stdout the power vars
func _on_Timer_timeout():
	_time_elapsed += _timer_const
	print(\"\\nTime Elapsed: \" + str(_time_elapsed) + \"s\")
	print(\"Battery Percentage: \" + str(_battery_percent))
	print(\"Power State: \" + _power_state)
	print(\"Battery Seconds: \" + str(_battery_seconds))
	#timer.start()
"

[node name="CenterContainer" type="CenterContainer"]
margin_right = 1280.0
margin_bottom = 720.0

[node name="PanelContainer" type="PanelContainer" parent="."]
margin_left = 453.0
margin_top = 261.0
margin_right = 827.0
margin_bottom = 459.0

[node name="BatteryTest" type="VBoxContainer" parent="PanelContainer"]
margin_left = 7.0
margin_top = 7.0
margin_right = 367.0
margin_bottom = 191.0
rect_min_size = Vector2( 360, 0 )
size_flags_horizontal = 3
size_flags_vertical = 3
alignment = 1
script = SubResource( 1 )

[node name="Title" type="Label" parent="PanelContainer/BatteryTest"]
margin_right = 360.0
margin_bottom = 14.0
text = "Battery / Power Test"
align = 1

[node name="Container" type="Panel" parent="PanelContainer/BatteryTest"]
margin_left = 180.0
margin_top = 18.0
margin_right = 180.0
margin_bottom = 48.0
rect_min_size = Vector2( 0, 30 )
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="VBox" type="VBoxContainer" parent="PanelContainer/BatteryTest"]
margin_top = 52.0
margin_right = 360.0
margin_bottom = 102.0
alignment = 1

[node name="BatPerHBox" type="HBoxContainer" parent="PanelContainer/BatteryTest/VBox"]
margin_right = 360.0
margin_bottom = 14.0
alignment = 1

[node name="Label" type="Label" parent="PanelContainer/BatteryTest/VBox/BatPerHBox"]
margin_left = 69.0
margin_right = 194.0
margin_bottom = 14.0
text = "Battery Percentage:"

[node name="Amount" type="Label" parent="PanelContainer/BatteryTest/VBox/BatPerHBox"]
margin_left = 198.0
margin_right = 290.0
margin_bottom = 14.0
text = "PLACEHOLDER"

[node name="PowStateHBox" type="HBoxContainer" parent="PanelContainer/BatteryTest/VBox"]
margin_top = 18.0
margin_right = 360.0
margin_bottom = 32.0
alignment = 1

[node name="Label" type="Label" parent="PanelContainer/BatteryTest/VBox/PowStateHBox"]
margin_left = 92.0
margin_right = 171.0
margin_bottom = 14.0
text = "Power State:"

[node name="Amount" type="Label" parent="PanelContainer/BatteryTest/VBox/PowStateHBox"]
margin_left = 175.0
margin_right = 267.0
margin_bottom = 14.0
text = "PLACEHOLDER"

[node name="BatSecHBox" type="HBoxContainer" parent="PanelContainer/BatteryTest/VBox"]
margin_top = 36.0
margin_right = 360.0
margin_bottom = 50.0
alignment = 1

[node name="Label" type="Label" parent="PanelContainer/BatteryTest/VBox/BatSecHBox"]
margin_left = 91.0
margin_right = 173.0
margin_bottom = 14.0
text = "Seconds left:"

[node name="Amount" type="Label" parent="PanelContainer/BatteryTest/VBox/BatSecHBox"]
margin_left = 177.0
margin_right = 269.0
margin_bottom = 14.0
text = "PLACEHOLDER"

[node name="Timer" type="Timer" parent="PanelContainer/BatteryTest"]
wait_time = 5.0

[node name="Container2" type="Panel" parent="PanelContainer/BatteryTest"]
margin_left = 180.0
margin_top = 106.0
margin_right = 180.0
margin_bottom = 136.0
rect_min_size = Vector2( 0, 30 )
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="MainMenuButton" type="Button" parent="PanelContainer/BatteryTest"]
margin_top = 140.0
margin_right = 360.0
margin_bottom = 160.0
text = "Main Menu"
script = ExtResource( 2 )

[node name="QuitButton" type="Button" parent="PanelContainer/BatteryTest"]
margin_top = 164.0
margin_right = 360.0
margin_bottom = 184.0
text = "Exit"
script = ExtResource( 1 )

[node name="Camera" parent="." instance=ExtResource( 3 )]

[connection signal="timeout" from="PanelContainer/BatteryTest/Timer" to="PanelContainer/BatteryTest" method="_on_Timer_timeout"]
